#!/bin/sh

pgrep -x picom > /dev/null || picom -b --config $HOME/.config/picom/picom.jonaburg.conf &
feh --bg-fill $HOME/.config/eww/assets/wallpapers/powermenu.jpg
setxkbmap us,ara -option "grp:alt_shift_toggle" &
pgrep -x mpris-proxy > /dev/null || mpris-proxy &
pgrep -x sxhkd > /dev/null || sxhkd &
pgrep -x eww > /dev/null || eww daemon &
pgrep -x dunst > /dev/null || dunst &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
numlockx on &
xset -dpms &
xset s off &
nm-applet &

bspc config split_ratio               0.52
bspc config border_width              2
bspc config window_gap                5
bspc config split_ratio               0.52
bspc config borderless_monocle        true
bspc config gapless_monocle           true
bspc config focus_follows_pointer     true
bspc config remove_disabled_monitors  true
for side in top right bottom left ; do
	bspc config ${side}_padding 5
done

bspc config normal_border_color         "#51576d"
bspc config active_border_color         "#9ece6a"
bspc config focused_border_color        "#9ece6a"
bspc config presel_feedback_color       "#d5a4b5"
bspc config urgent_border_color         "#d5a4b5"

bspc config external_rules_command "$HOME/.config/bspwm/external_rules"

bspc rule -a Screenkey manage=off
bspc rule -a kitty desktop='^1' follow=on
bspc rule -a Thunar desktop='^2' follow=on
bspc rule -a Brave-browser desktop='^3' follow=on
bspc rule -a Microsoft-edge desktop='^3' follow=on
bspc rule -a Slack desktop='^4' follow=on
bspc rule -a obs desktop='^5' follow=on
bspc rule -a TelegramDesktop desktop='^6' follow=on
bspc rule -a Virt-manager desktop='^7' follow=on
bspc rule -a Gimp desktop='^8' follow=on
bspc rule -a Gimp-2.10 desktop='^8' follow=on
bspc rule -a Blender desktop='^8' follow=on
bspc rule -a "Blender:*:Blender Render" state=floating layer=above
bspc rule -a kdenlive desktop='^8' follow=on
bspc rule -a Spotify desktop='^9' follow=on
bspc rule -a "Minecraft 1.20.1" desktop='^9' follow=on
bspc rule -a obsidian desktop='^10' follow=on
bspc rule -a Fig state=floating layer=above manage=off border=off
bspc rule -a "Fig:*:Fig Dashboard" manage=on border=on state=tiled
bspc rule -a rdesktop state=floating

INTERNAL_MONITOR="eDP-1"
EXTERNAL_MONITOR="DP-1"
# on first load setup default workspaces
if [[ "$1" = 0 ]]; then
  if [[ $(xrandr -q | grep "^${EXTERNAL_MONITOR} connected") ]]; then
    bspc monitor "$EXTERNAL_MONITOR" -d I II III IV V
    bspc monitor "$INTERNAL_MONITOR" -d VI VII VIII IX X
    bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
  else
    bspc monitor "$INTERNAL_MONITOR" -d I II III IV V VI VII VIII IX X
  fi
fi

monitor_add() {
  # Move first 5 desktops to external monitor
  for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | sed 5q); do
    bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
  done

  # Remove default desktop created by bspwm
  bspc desktop Desktop --remove

  # reorder monitors
  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
}

monitor_remove() {
  # Add default temp desktop because a minimum of one desktop is required per monitor
  bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  # Move all desktops except the last default desktop to internal monitor
  for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
    bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
  done

  # delete default desktops
  bspc desktop Desktop --remove

  # reorder desktops
  bspc monitor "$INTERNAL_MONITOR" -o I II III IV V VI VII VIII IX X
}

if [[ $(xrandr -q | grep "^${EXTERNAL_MONITOR} connected") ]]; then
  # set xrandr rules for docked setup
  xrandr --output "$INTERNAL_MONITOR" --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --primary --mode 1024x768 --pos 1920x0 --rotate normal
  if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 5 ]]; then
    monitor_add
  fi
  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
else
  # set xrandr rules for mobile setup
  xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --off
  if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 10 ]]; then
    monitor_remove
  fi
fi

(defwindow powermenu
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout))

(defwidget powermenu_layout []
  (box :class "layout-box" :space-evenly false :orientation "v"
       :style "background-image: url('./assets/wallpapers/powermenu.jpg')"
    (box
      (box :valign "start" :class "tm-box" :space-evenly false :spacing 25
        (label :text "󰥔")
        (label :text "${time.hour}:${time.min}:${time.sec}"))
      (box :space-evenly false :spacing 25
        (_sundial)
        (_battery :status {EWW_BATTERY.BAT0.status}
                  :battery {EWW_BATTERY.BAT0.capacity}
                  :charge "" :one "" :two "" :three "" :four ""
                  :five "" :six "" :seven "")
        (_network :strength net :offline "󰤭" :excellent "󰤨" :good "󰤥"
                  :okay "󰤢" :slow "󰤟")
        (label :text "|" :class "sep")
        (box :space-evenly false :orientation "v" :spacing 5
          (button :onclick "eww close powermenu" :tooltip "Close" :class "close-btn" "")
          (label :text "(Esc)" :style "font-size: 0.8em; opacity: ${show_confirm_logout || show_confirm_poweroff || show_confirm_reboot || show_confirm_lock || show_confirm_suspend ? 0.1 : 1}"))))
    (_buttons)))

(defwidget _battery [battery status one two three
                    four five six seven charge]
  (box :class "bat-box" :space-evenly false :spacing 8
    (label :text {status == 'Charging' ? charge :
      battery < 15 ? seven :
        battery < 30 ? six :
          battery < 45 ? five :
            battery < 60 ? four :
              battery < 75 ? three :
                battery < 95 ? two : one})))

(defwidget _network [strength offline excellent
                    good okay slow]
  (box :class "net-box"
       :space-evenly false
       :spacing 8
    (label :text {strength == "" ? offline :
      strength < 26 ? slow :
        strength < 51 ? okay :
          strength < 76 ? good : excellent})))

(defwidget _buttons []
  (box :class "btns-box" :spacing 5
       :vexpand true :hexpand true
       :valign "center" :halign "center"
       :space-evenly false
    (_btn_with_confirm :show_confirm show_confirm_lock
                       :confirm_action "~/.config/sxhkd/powermenu/lock-rc.sh confirm_action"
                       :cancel_action "~/.config/sxhkd/powermenu/lock-rc.sh cancel_action"
                       :show_confirm_action "~/.config/sxhkd/powermenu/lock-rc.sh show_confirm_action"
                       :tooltip "Lock"
                       :shortcut "K"
                       :icon "")
    (_btn_with_confirm :show_confirm show_confirm_suspend
                       :confirm_action "~/.config/sxhkd/powermenu/suspend-rc.sh confirm_action"
                       :cancel_action "~/.config/sxhkd/powermenu/suspend-rc.sh cancel_action"
                       :show_confirm_action "~/.config/sxhkd/powermenu/suspend-rc.sh show_confirm_action"
                       :tooltip "Suspend"
                       :shortcut "U"
                       :icon "󰒲")
    (_btn_with_confirm :show_confirm show_confirm_poweroff
                       :confirm_action "~/.config/sxhkd/powermenu/poweroff-rc.sh confirm_action"
                       :cancel_action "~/.config/sxhkd/powermenu/poweroff-rc.sh cancel_action"
                       :show_confirm_action "~/.config/sxhkd/powermenu/poweroff-rc.sh show_confirm_action"
                       :tooltip "Shutdown"
                       :shortcut "S"
                       :icon "")
    (_btn_with_confirm :show_confirm show_confirm_reboot
                       :confirm_action "~/.config/sxhkd/powermenu/reboot-rc.sh confirm_action"
                       :cancel_action "~/.config/sxhkd/powermenu/reboot-rc.sh cancel_action"
                       :show_confirm_action "~/.config/sxhkd/powermenu/reboot-rc.sh show_confirm_action"
                       :tooltip "Reboot"
                       :shortcut "R"
                       :icon "勒")
    (_btn_with_confirm :show_confirm show_confirm_logout
                       :confirm_action "~/.config/sxhkd/powermenu/logout-rc.sh confirm_action"
                       :cancel_action "~/.config/sxhkd/powermenu/logout-rc.sh cancel_action"
                       :show_confirm_action "~/.config/sxhkd/powermenu/logout-rc.sh show_confirm_action"
                       :tooltip "Logout"
                       :shortcut "L"
                       :icon "")))

(defwidget _btn_with_confirm [show_confirm confirm_action cancel_action show_confirm_action tooltip icon shortcut]
  (box :space-evenly false
       :orientation "v"
       :class {!show_confirm && (show_confirm_reboot || show_confirm_poweroff || show_confirm_logout || show_confirm_lock || show_confirm_suspend) ? "inactive" : ""}
    (revealer :reveal {show_confirm ? false : true}
              :transition "slideup"
              :duration "300ms"
      (button :tooltip tooltip
              :onclick show_confirm_action
        (centerbox :orientation "v"
          (label :text icon)
          (label :text tooltip)
          (label :text "(${shortcut})"))))
    (revealer :reveal show_confirm
              :transition "slidedown"
              :duration "300ms"
      (box :space-evenly false :spacing 5
        (button :tooltip "Cancel" :onclick cancel_action
          (centerbox :orientation "v"
            (label :text "")
            (label :text "Cancel")
            (label :text "(Esc)")))
        (button :tooltip "Confirm" :class "dangerous-btn" :onclick confirm_action
          (centerbox :orientation "v"
            (label :text "")
            (label :text "Confirm")
            (label :text "(${shortcut})")))))))

(defwidget _sundial []
  (label :class "sundial-lbl" :halign "end" :hexpand true
         :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
               time.hour <= 5 ? "Dawn" :
               time.hour >= 6
                && (time.hour <= 8 && time.min <= 59)
                  ? "Morning" :
               time.hour >= 9
                 && (time.hour <= 11 && time.min <= 59)
                   ? "Late Morning" :
               time.hour == 12 && time.min <= 29
                 ? "Midday" :
               time.hour >= 12 && time.hour <= 16
                 ? "Afternoon" :
               time.hour > 16 && time.hour <= 17
                 ? "Late Afternoon" :
               (time.hour >= 17 && time.min <= 1)
                 || (time.hour <= 18 && time.min <= 20)
                   ? "Early Evening" :
               time.hour >= 18 && time.hour <= 19
                 ? "Dusk" :
               time.hour > 19 && time.hour <= 21
                 ? "Late Evening" :
               time.hour > 21 ? "Night" : "Midnight"}))

;; vim:ft=yuck

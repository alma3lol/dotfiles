(defwidget wifi []
(eventbox :onhover "eww update wifi_rev=true"
    :onhoverlost "eww update wifi_rev=false"
    (box :vexpand "false" :hexpand "false" :space-evenly "false"
      (button :class "module-wif" :onclick "~/.config/rofi/wifi-launcher.sh" :wrap "false" :limit-width 12 :style "color: ${COL_WLAN};" WLAN_ICON)
      (revealer :transition "slideright"
        :reveal wifi_rev
        :duration "350ms"
        (button :class "module_essid" :onclick "~/.config/rofi/wifi-launcher.sh" ESSID_WLAN)
))))


(defwidget workspaces []
(literal :content workspace))


(defwidget bat []
  (box :class "bat_module" :vexpand "false" :hexpand "false"
    (eventbox
        :onhover "eww open system"
        :onhoverlost "eww close system"
    (circular-progress :value battery
        :class "batbar"
        :thickness 4
      (label
          :class "iconbat"
          :limit-width 2
          :tooltip "Battery on ${battery}%"
          :show_truncated false
          :wrap false
          :text "󰁹")))))


(defwidget mem []
  (box :class "mem_module" :vexpand "false" :hexpand "false" 
    (eventbox
        :onhover "eww open system"
        :onhoverlost "eww close system"
        (circular-progress :value memory
            :class "membar"
            :thickness 4
            (label
                :class "iconmem"
                :tooltip "Using ${memory}% ram"
                :show_truncated false
                :wrap false
                :text "")))))



(defwidget sep []
(box :class "module-2" :vexpand "false" :hexpand "false"
  (label :class "separ" :text "|")))

(defwidget clock_module []
  (eventbox :onhover "eww update time_rev=true"
    :onhoverlost "eww update time_rev=false"
  (box :class "module" :space-evenly "false" :orientation "h" :spacing "3" 
    (label :text clock_time :class "clock_time_class" )
    (label :text "" :class "clock_time_sep" )
    (label :text clock_minute :class "clock_minute_class")
      (revealer :transition "slideleft"
        :reveal time_rev
        :duration "350ms"
      (eventbox
          :onhover "eww open calendar"
          :onhoverlost "eww close calendar"
          (label :class "clock_date_class" :text clock_date)
        )
      ))))

(defwidget power []
  (button :onclick "~/.config/sxhkd/powermenu/start-rc.sh" :class "power-btn" ""))

(defwidget volume_bar []
(eventbox :onhover "eww update vol_reveal=true"
    :onhoverlost "eww update vol_reveal=false"
  (box :class "module-2" :space-evenly "false" :orientation "h" :spacing "3" 
      (button   :onclick "scripts/pop audio"   :class "volume_icon" "")
      (revealer :transition "slideleft"
        :reveal vol_reveal
        :duration "350ms"
        (scale    :class "volbar"
          :value volume_percent
          :orientation "h"
          :tooltip "${volume_percent}%"
          :max 100
          :min 0
          :onchange "amixer -D pulse sset Master {}%" )))))

(defwidget bright []
(eventbox :onhover "eww update br_reveal=true" :onhoverlost "eww update br_reveal=false"
  (box :class "module-2" :space-evenly "false" :orientation "h" :spacing "3" 
    (label :text "" :class "bright_icon" :tooltip "Brightness")
      (revealer :transition "slideleft"
        :reveal br_reveal
        :duration "350ms"
        (scale    :class "brightbar"
          :value brightness_percent
          :orientation "h"
          :tooltip "${brightness_percent}%"
          :max 100
          :min 0
          :onchange "brightnessctl set {}%" )))))

(defwidget left []
  (box :orientation "h" 
    :space-evenly false  
    :halign "end"
    :class "left_modules"
  (bright)
  (volume_bar)
  (wifi)
  (sep)
  (bat)
  (mem)
  (sep)
  (clock_module)
  (power)))


(defwidget right []
  (box :orientation "h" 
    :space-evenly false  
    :halign "start"
    :class "right_modules"
  (workspaces)))


(defwidget center []
  (box :orientation "h" 
    :space-evenly false  
    :halign "center"
    :class "center_modules"
  (label :text "Coming soon")))

(defwidget bar_1 []
(box :class "bar_class"
    :orientation "h"
  (right)
  (center)
  (left)
  ))

(defwindow bar
  :geometry (geometry :x "0%"
    :y "5px"
    :width "99%"
    :height "50px"
    :anchor "top center")
  :stacking "bg"
  :wm-ignore true
  :windowtype "dock"
(bar_1))

(defwidget system []
(box :class "sys_win" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false" :spacing 0
  (box :class "sys_bat_box" :orientation "h" :space-evenly "false"
    (circular-progress :value battery
        :class "sys_bat"
        :thickness 9
      (label :text "󰁹"
          :class "sys_icon_bat"
          :limit-width 2
          :show_truncated false
          :wrap false))
    (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
      (label :text "battery"
          :halign "start"
          :class "sys_text_bat"
          :limit-width 9
          :show_truncated false
          :wrap false)
      (label :text "${battery}%"
          :halign "start"
          :class "sys_text_bat_sub"
          :limit-width 22
          :show_truncated false
          :wrap false)
      (label :text "${battery_status}"
          :halign "start"
          :class "sys_text_bat_sub"
          :limit-width 22
          :show_truncated false
          :wrap false)))
  (label :text "" :class "sys_sep" :halign "center")
  (box :class "sys_mem_box" :orientation "h" :space-evenly "false" :halign "start"
    (circular-progress :value memory
        :class "sys_mem"
        :thickness 9
      (label :text ""
          :class "sys_icon_mem"
          :limit-width 2
          :show_truncated false
          :wrap false
          :angle 0.0))
    (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
      (label :text "memory"
          :halign "start"
          :class "sys_text_mem"
          :limit-width 9
          :show_truncated false
          :wrap false)
      (label :text "${memory_used_mb} | ${memory_total_mb}mb "
          :halign "start"
          :class "sys_text_mem_sub"
          :limit-width 22
          :show_truncated false
          :wrap false)
      (label :text "${memory_free_mb}mb free"
          :halign "start"
          :class "sys_text_mem_sub"
          :limit-width 22
          :show_truncated false
          :wrap false)))))

(defwidget cal []
    (box :class "cal" :orientation "v"
      (box :class "cal-in"
        (calendar :class "cal" 
          :day calendar_day 
          :year calendar_year))))

(defwindow calendar
  :geometry (geometry :x "-20px" 
    :y "7%" 
    :anchor "top right"
    :width "270px" 
  :height "60px")
(cal))



(defwidget audio []
  (box :class "audio-box" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
    (box :halign "v" :space-evenly "false" :hexpand "false" :vexpand "false"
      (box :class "speaker_icon" :orientation "v")
      (box :orientation "v" :halign "center" :vexpand "false" :hexpand "false"
      (label :class "speaker_text" :text "speaker" :valign "center" :halign "left" )
        (box :class "speaker_bar" :halign "center" :vexpand "false" :hexpand "false"
          (scale    :value volume_percent
            :space-evenly "false"
            :orientation "h"
            :onchange "amixer -D pulse sset Master {}%" 
            :tooltip "Volume on ${volume_percent}%"
            :max 100
    :min 0))))
  (label :text "" :class "audio_sep" :halign "center")
    (box :halign "v" :space-evenly "false" :hexpand "false" :vexpand "false"
      (box :class "mic_icon" :orientation "v")
      (box :orientation "v" :halign "center" :vexpand "false" :hexpand "false"
      (label :class "mic_text" :text "mic" :valign "center" :halign "left" )
        (box :class "mic_bar" :halign "center" :vexpand "false" :hexpand "false"
          (scale    :value mic_percent
            :space-evenly "false"
            :orientation "h"
            :tooltip "Mic on ${mic_percent}%"
            :onchange "amixer -D pulse sset Capture {}%" 
            :max 100
    :min 0))))))

(defwindow audio_ctl
  :geometry (geometry :x "-20px" 
    :y "7%" 
    :anchor "top right"
    :width "280px" 
  :height "60px")
(audio))


(defwindow system
  :geometry (geometry :x "-20px" 
    :y "7%" 
    :anchor "top right"
    :width "290px" 
  :height "120px")
(system))
